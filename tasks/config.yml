---

- name: Config tasks
  become: true
  tags:
    - prometheus_config
    - prometheus
  block:

    - name: Merge prometheus daemon flags
      ansible.builtin.set_fact:
        prometheus_daemon_config_flags: "{{ (prometheus_daemon_config_flags | default({})) | combine({ (item.split('=')[0]): item }) }}"
      loop: "{{ prometheus_daemon_config_default + prometheus_daemon_config_options }}"

    - name: Set prometheus configuration facts
      ansible.builtin.set_fact:
        prometheus_daemon_config_merged: "{{ prometheus_daemon_config_flags.values() | list | unique }}"
        prometheus_config_options_merged: "{{ prometheus_config_default | combine(prometheus_config_options, recursive=True) }}" 

    - name: Debug variables
      when: prometheus_debug | bool
      ansible.builtin.include_tasks: debug/config.yml

    - name: Ensure prometheus group exist
      when: prometheus_install_source == 'binary'
      ansible.builtin.group:
        name: "{{ prometheus_group }}"
        state: present

    - name: Ensure prometheus user exists
      when: prometheus_install_source == 'binary'
      ansible.builtin.user:
        name: "{{ prometheus_user }}"
        group: "{{ prometheus_group }}"
        system: true
        create_home: false
        home: "{{ prometheus_data_dir }}"
        shell: /sbin/nologin

    - name: Create prometheus config directory
      when: prometheus_install_source == 'binary'
      ansible.builtin.file:
        path: "{{ prometheus_config_dir }}"
        owner: root
        group: root
        mode: "0755" 
        state: directory

    - name: Manage prometheus daemon options
      when: (prometheus_daemon_config_merged | default([]) | length) > 0
      ansible.builtin.template:
        src: prometheus.daemon.j2
        dest: "{{ prometheus_daemon_config_file }}"
        owner: root
        group: root
        mode: "0644"
      notify: Restart prometheus

    - name: Manage prometheus configuration 
      when: (prometheus_config_options_merged | length) > 0
      ansible.builtin.template:
        src: prometheus.conf.j2
        dest: "{{ prometheus_config_file }}"
        owner: root 
        group: root
        mode: "0644"
      notify: Reload prometheus

    - name: Create prometheus data directory
      when: prometheus_install_source == 'binary'
      ansible.builtin.file: 
        path: "{{ prometheus_data_dir }}"
        owner: "{{ prometheus_user }}"
        group: "{{ prometheus_group }}"
        mode: "0755"
        state: directory
